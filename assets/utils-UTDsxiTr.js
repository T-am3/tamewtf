class g extends Error{filePath;constructor(e,t){super(e),this.name="MarkdownParseError",this.filePath=t}}class d extends Error{url;status;constructor(e,t,a){super(e),this.name="NetworkError",this.url=t,this.status=a}}function c(r){const e=r.tags||r.tag||"";return e?e.startsWith("[")&&e.endsWith("]")?e.slice(1,-1).split(",").map(t=>t.trim().replace(/['"]/g,"")).filter(t=>t.length>0):e.split(",").map(t=>t.trim()).filter(t=>t.length>0):[]}function p(r){try{const e=r.split(`
`),t={};let a=0;if(e[0]?.trim()==="---"){let i=-1;for(let n=1;n<e.length;n++)if(e[n].trim()==="---"){i=n;break}if(i>0){for(let n=1;n<i;n++){const u=e[n].trim();if(u.includes(":")){const[m,...f]=u.split(":");let o=f.join(":").trim();(o.startsWith('"')&&o.endsWith('"')||o.startsWith("'")&&o.endsWith("'"))&&(o=o.slice(1,-1)),t[m.trim()]=o}}a=i+1}}const s=e.slice(a).join(`
`).trim();return{metadata:t,content:s}}catch(e){throw new g(`Failed to parse markdown: ${e instanceof Error?e.message:"Unknown error"}`,"unknown")}}async function l(r){try{const e=await fetch(r);if(!e.ok)throw new d(`Failed to fetch markdown file: ${e.status} ${e.statusText}`,r,e.status);const t=await e.text();if(t.trim().startsWith("<!doctype html>")||t.trim().startsWith("<html"))throw new g(`Received HTML instead of markdown for path: ${r}`,r);return p(t)}catch(e){throw e instanceof d||e instanceof g?e:new d(`Network error fetching markdown file: ${e instanceof Error?e.message:"Unknown error"}`,r)}}async function w(){let r=[];try{r=await(await fetch("/blog/blogs.json")).json()}catch{r=[]}const e=[];for(const t of r)try{const a=await l(`/blog/${t}.md`);e.push({id:t,title:a.metadata.title||"Untitled",excerpt:a.metadata.excerpt||"",date:a.metadata.date||new Date().toISOString().split("T")[0],readTime:a.metadata.readTime||a.metadata["read time"]||"3 min read",category:a.metadata.category||"general",tags:c(a.metadata),slug:t,content:a.content,previewImage:a.metadata.previewImage})}catch(a){console.warn(`Failed to load blog post ${t}:`,a instanceof Error?a.message:a)}return e.sort((t,a)=>new Date(a.date).getTime()-new Date(t.date).getTime())}async function y(r){try{const e=await l(`/blog/${r}.md`);if(!e)return null;const{metadata:t,content:a}=e;return{id:r,title:t.title||"Untitled",excerpt:t.excerpt||"",date:t.date||new Date().toISOString().split("T")[0],readTime:t.readTime||t["read time"]||"3 min read",category:t.category||"general",tags:c(t),slug:r,content:a,previewImage:t.previewImage}}catch{return null}}async function h(){let r=[];try{r=await(await fetch("/projects/projects.json")).json()}catch{r=[]}const e=[];for(const t of r)try{const a=await l(`/projects/${t}.md`);if(a){const{metadata:s,content:i}=a;e.push({id:t,title:s.title||"Untitled",description:s.description||s.excerpt||"",category:s.category||"general",tags:c(s),slug:t,featured:s.featured==="true",content:i,tools:s.tools?JSON.parse(s.tools):[],year:s.year,date:s.date,status:s.status,liveUrl:s.liveUrl,sourceUrl:s.sourceUrl,previewImage:s.previewImage})}}catch{}return e}async function k(r){const e=await l(`/projects/${r}.md`);if(!e)return null;const{metadata:t,content:a}=e;return{id:r,title:t.title||"Untitled",description:t.description||t.excerpt||"",category:t.category||"general",tags:c(t),slug:r,featured:t.featured==="true",content:a,tools:t.tools?JSON.parse(t.tools):[],year:t.year,date:t.date,status:t.status,liveUrl:t.liveUrl,sourceUrl:t.sourceUrl,previewImage:t.previewImage}}async function j(){try{const e=(await w()).flatMap(t=>t.tags);return[...new Set(e)].sort()}catch{return[]}}async function v(){try{const e=(await h()).flatMap(t=>t.tags);return[...new Set(e)].sort()}catch{return[]}}export{w as a,v as b,k as c,j as d,y as e,h as g};
//# sourceMappingURL=utils-UTDsxiTr.js.map
